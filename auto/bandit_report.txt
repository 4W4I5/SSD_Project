Run started:2024-12-04 04:44:35.186546

Test results:
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: ./vuln.py:14:15
13	    username = "admin"  # Hardcoded username
14	    password = "password123"  # Hardcoded password
15	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: ./vuln.py:29:14
28	    # This query is vulnerable to SQL Injection
29	    query = f"SELECT * FROM users WHERE username = '{username}'"
30	

--------------------------------------------------
>> Issue: [B201:flask_debug_true] A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.
   Severity: High   Confidence: Medium
   CWE: CWE-94 (https://cwe.mitre.org/data/definitions/94.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b201_flask_debug_true.html
   Location: ./vuln.py:89:4
88	if __name__ == "__main__":
89	    app.run(debug=True)

--------------------------------------------------

Code scanned:
	Total lines of code: 42
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 1
		Medium: 1
		High: 1
	Total issues (by confidence):
		Undefined: 0
		Low: 1
		Medium: 2
		High: 0
Files skipped (0):
